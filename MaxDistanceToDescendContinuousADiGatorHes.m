% This code was generated using ADiGator version 1.4
% ©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function phaseout = MaxDistanceToDescendContinuousADiGatorHes(input)
global ADiGator_MaxDistanceToDescendContinuousADiGatorHes
if isempty(ADiGator_MaxDistanceToDescendContinuousADiGatorHes); ADiGator_LoadData(); end
Gator1Data = ADiGator_MaxDistanceToDescendContinuousADiGatorHes.MaxDistanceToDescendContinuousADiGatorHes.Gator1Data;
Gator2Data = ADiGator_MaxDistanceToDescendContinuousADiGatorHes.MaxDistanceToDescendContinuousADiGatorHes.Gator2Data;
% ADiGator Start Derivative Computations
g = input.auxdata.g;
%User Line: g    = input.auxdata.g;
m = input.auxdata.m;
%User Line: m    = input.auxdata.m;
S = input.auxdata.S;
%User Line: S    = input.auxdata.S;
rho0 = input.auxdata.rho0;
%User Line: rho0 = input.auxdata.rho0;
a0 = input.auxdata.a0;
%User Line: a0   = input.auxdata.a0;
umax = input.auxdata.umax;
%User Line: umax = input.auxdata.umax;
t.dV = input.phase.time.dV;
t.f = input.phase.time.f;
%User Line: t   = input.phase.time;
h.dV = input.phase.state.dV(:,1);
h.f = input.phase.state.f(:,1);
%User Line: h   = input.phase.state(:,1);
v.dV = input.phase.state.dV(:,2);
v.f = input.phase.state.f(:,2);
%User Line: v   = input.phase.state(:,2);
fpa.dV = input.phase.state.dV(:,3);
fpa.f = input.phase.state.f(:,3);
%User Line: fpa = input.phase.state(:,3);
x.dV = input.phase.state.dV(:,4);
x.f = input.phase.state.f(:,4);
%User Line: x   = input.phase.state(:,4);
u.dV = input.phase.control.dV(:,1);
u.f = input.phase.control.f(:,1);
%User Line: u   = input.phase.control(:,1);
throttle.dV = input.phase.control.dV(:,2);
throttle.f = input.phase.control.f(:,2);
%User Line: throttle = input.phase.control(:,2);
hbar.dV = h.dV/1000;
hbar.f = h.f/1000;
%User Line: hbar = h./1000;
cada1f1 = size(t.f,1);
HH.f = zeros(cada1f1,5);
%User Line: HH   = zeros(size(t,1),5);
cada1f1 = size(t.f);
cada1f2 = ones(cada1f1);
HH.f(:,1) = cada1f2;
%User Line: HH(:,1) = ones(size(t));
cadaforvar1.f = [2 3 4 5 6];
%User Line: cadaforvar1 = 2:6;
cada2f1 = size(HH.f,1);
HH.dV = zeros(cada2f1,5);
HH.f(:,6) = 0;
HH.dVdV = zeros(size(HH.dV,1),4);
for cadaforcount1 = 1:5
    ii.f = cadaforvar1.f(:,cadaforcount1);
    %User Line: ii = cadaforvar1(:,cadaforcount1);
    cada1f1 = ii.f - 1;
    cada2f1 = size(HH.f,1);
    cada1td1 = zeros(cada2f1,1);
    cada1td1dV = zeros(size(cada1td1,1),1);
    cada2f1 = Gator1Data.Index1(:,cadaforcount1);
    cada2tempf1 = nonzeros(cada2f1);
    cada2f2 = zeros(1,1);
    cada2f2(1:length(cada2tempf1)) = cada2tempf1;
    cada2td1 = zeros(size(HH.dV,1),1);
    cada2td1(:,logical(Gator2Data.Index1(:,cadaforcount1))) = HH.dVdV(:,nonzeros(Gator2Data.Index1(:,cadaforcount1)));
    cada2f3dV = cada2td1;
    cada2tempf1 = HH.dV(:,cada2f2(1:Gator2Data.Index2(cadaforcount1)));
    cada2f3 = zeros(size(HH.dV,1),1);
    cada2f3(:,1:Gator2Data.Index2(cadaforcount1)) = cada2tempf1;
    cada2f4 = Gator1Data.Index1(:,cadaforcount1);
    cada2f5 = logical(cada2f4);
    cada1td1dV(:,logical(Gator2Data.Index4(:,cadaforcount1))) = cada2f3dV(:,nonzeros(Gator2Data.Index4(:,cadaforcount1)));
    cada1td1(:,cada2f5) = cada2f3(:,1:Gator2Data.Index5(cadaforcount1));
    cada1f2dVdV = cada1td1dV;     cada1f2dV = cada1td1;
    cada1f2 = HH.f(:,cada1f1);
    cada2td1 = cada1f2dV.*hbar.dV;
    cada2td1 = cada2td1 + hbar.f.*cada1f2dVdV;
    cada1td1dV = cada2td1;
    cada1td1 = hbar.f.*cada1f2dV;
    cada2f1dV = hbar.dV.*cada1f2dV;
    cada2f1 = cada1f2.*hbar.dV;
    cada2td1 = cada1td1dV;
    cada2td1 = cada2td1 + cada2f1dV;
    cada1td1dV = cada2td1;
    cada1td1 = cada1td1 + cada2f1;
    cada1f3dVdV = cada1td1dV;     cada1f3dV = cada1td1;
    cada1f3 = cada1f2.*hbar.f;
    cada2f1 = Gator1Data.Index2(:,cadaforcount1);
    cada2f2 = logical(cada2f1);
    cada2f3 = Gator1Data.Index2(:,cadaforcount1);
    cada2tempf1 = nonzeros(cada2f3);
    cada2f4 = zeros(1,1);
    cada2f4(1:length(cada2tempf1)) = cada2tempf1;
    cada2f5dV = cada1f3dVdV(:,Gator2Data.Index3);
    cada2f5 = cada1f3dV(:,cada2f4);
    HH.dVdV(:,logical(Gator2Data.Index6(:,cadaforcount1))) = cada2f5dV(:,nonzeros(Gator2Data.Index6(:,cadaforcount1)));
    HH.dV(:,cada2f2) = cada2f5;
    HH.f(:,ii.f) = cada1f3;
    %User Line: HH(:,ii) = HH(:,ii-1).*hbar;
end
cada1f1dVdV = HH.dVdV(:,Gator2Data.Index15);
cada1f1dV = HH.dV(:,Gator1Data.Index6);
cada1f1 = HH.f(:,Gator1Data.Index5);
cada1tf1 =  zeros(4,1);
cada2f1 = input.auxdata.z(Gator1Data.Index7);
cada1tf1(Gator1Data.Index8) = cada2f1;
cada2tf1 = zeros(3,1);
cada2tf1(Gator2Data.Index17) = cada1tf1(Gator2Data.Index16);
z.dVdV = cada1f1dVdV*cada2tf1;
z.dV = cada1f1dV*cada1tf1;
z.f = cada1f1*input.auxdata.z;
%User Line: z = HH(:,2:5)*input.auxdata.z;
cada1f1dVdV = -z.dVdV;
cada1f1dV = uminus(z.dV);
cada1f1 = uminus(z.f);
cada2f1dV = exp(cada1f1).*cada1f1dV;
cada2f1 = exp(cada1f1);
cada2td1 = cada1f1dV.*cada2f1dV;
cada2td1 = cada2td1 + cada2f1.*cada1f1dVdV;
cada1f2dVdV = cada2td1;
cada1f2dV = cada2f1.*cada1f1dV;
cada1f2 = exp(cada1f1);
r.dVdV = input.auxdata.r0.*cada1f2dVdV;
r.dV = input.auxdata.r0*cada1f2dV;
r.f = input.auxdata.r0*cada1f2;
%User Line: r = input.auxdata.r0*exp(-z);
cada1f1dV = HH.dV(:,1);
cada1f1 = HH.f(:,Gator1Data.Index9);
cada1tf1 =  zeros(1,1);
cada2f1 = input.auxdata.y(2);
cada1tf1(1) = cada2f1;
cada1f2dV = cada1f1dV*cada1tf1;
cada1f2 = cada1f1*input.auxdata.y;
cada1td1 = cada1f2dV;
cada1td1dV = r.dVdV;
cada1td1 = cada1td1 + r.dV;
y.dVdV = cada1td1dV; y.dV = cada1td1;
y.f = cada1f2 + r.f;
%User Line: y = HH(:,1:2)*input.auxdata.y + r;
cada2f1dV = exp(y.f).*y.dV;
cada2f1 = exp(y.f);
cada2td1 = y.dV.*cada2f1dV;
cada2td1 = cada2td1 + cada2f1.*y.dVdV;
cada1f1dVdV = cada2td1;
cada1f1dV = cada2f1.*y.dV;
cada1f1 = exp(y.f);
rho.dVdV = rho0.*cada1f1dVdV;
rho.dV = rho0*cada1f1dV;
rho.f = rho0*cada1f1;
%User Line: rho = rho0*exp(y);
cada1f1dVdV = HH.dVdV(:,Gator2Data.Index18);
cada1f1dV = HH.dV(:,Gator1Data.Index11);
cada1f1 = HH.f(:,Gator1Data.Index10);
cada1tf1 =  zeros(3,1);
cada2f1 = input.auxdata.theta(Gator1Data.Index12);
cada1tf1(Gator1Data.Index13) = cada2f1;
cada2tf1 = zeros(2,1);
cada2tf1(Gator2Data.Index20) = cada1tf1(Gator2Data.Index19);
theta.dVdV = cada1f1dVdV*cada2tf1;
theta.dV = cada1f1dV*cada1tf1;
theta.f = cada1f1*input.auxdata.theta;
%User Line: theta = HH(:,1:4)*input.auxdata.theta;
cada2f1dV = (1/2)./sqrt(theta.f).*theta.dV;
cada2f1dV(theta.f == 0 & theta.dV == 0) = 0;
cada2f1 = sqrt(theta.f);
cada2f2dV = -0.5./cada2f1.^2.*cada2f1dV;
cada2f2 = 0.5./cada2f1;
cada2td1 = theta.dV.*cada2f2dV;
cada2td1 = cada2td1 + cada2f2.*theta.dVdV;
cada1f1dVdV = cada2td1;
cada1f1dV = cada2f2.*theta.dV;
cada2f1 = eq(theta.f,0);
cada2f2 = eq(theta.dV,0);
cada2f3 = and(cada2f1,cada2f2);
cada2td2 = cada1f1dVdV;
cada2tind1 = cada2f3(:,1);
cada2td2(cada2tind1) = 0;
cada1f1dVdV = cada2td2;
cada1f1dV(cada2f3) = 0;
cada1f1 = sqrt(theta.f);
a.dVdV = a0.*cada1f1dVdV;
a.dV = a0*cada1f1dV;
a.f = a0*cada1f1;
%User Line: a     = a0*sqrt(theta);
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = -v.dV./a.f.^2.*a.dV;
cada2f1 = v.dV./a.f;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2f2dV = -v.dV;
cada2f2 = uminus(v.f);
cada2f3dV = 2.*a.f.^(2-1).*a.dV;
cada2f3 = a.f.^2;
cada2td1 = zeros(size(cada2f2dV,1),2);
cada2td1(:,2) = cada2f2dV./cada2f3;
cada2td1(:,1) = cada2td1(:,1) + -cada2f2./cada2f3.^2.*cada2f3dV;
cada2f4dV = cada2td1;
cada2f4 = cada2f2./cada2f3;
cada2tf1 = a.dV(:,Gator2Data.Index21);
cada2td1 = cada2tf1.*cada2f4dV;
cada2td1(:,1) = cada2td1(:,1) + cada2f4.*a.dVdV;
cada2f5dV = cada2td1;
cada2f5 = cada2f4.*a.dV;
cada2f6dV = cada2f5dV;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index22) = cada2f6dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f6;
M.dVdV = cada1td1dV; M.dV = cada1td1;
M.f = v.f./a.f;
%User Line: M = v./a;
cada2f1 = size(rho.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,2) = rho.dV.*v.dV;
cada2td1(:,1) = cada2td1(:,1) + v.f.*rho.dVdV;
cada2f1dV = cada2td1;
cada2f1 = v.f.*rho.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2f2dV = v.dV.*rho.dV;
cada2f2 = rho.f.*v.dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,2) = cada2f3dV;
cada2td1(:,Gator2Data.Index23) = cada1td1dV(:,Gator2Data.Index24);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = rho.f.*v.f;
cada1tf1dV = v.dV(:,Gator2Data.Index25);
cada1tf1 = v.f(:,Gator1Data.Index14);
cada2td1 = zeros(size(cada1tf1dV,1),4);
cada2td1(:,Gator2Data.Index26) = cada1f1dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index27);
cada2td1(:,Gator2Data.Index28) = cada2td1(:,Gator2Data.Index28) + cada2tf1.*cada1f1dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1tf1.*cada1f1dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index29);
cada2f1 = cada1td1(:,2);
cada2tf1 = v.dV(:,Gator2Data.Index30);
cada2f2dV = cada2tf1.*cada1f1dV;
cada2f2 = cada1f1.*v.dV;
cada2td1 = cada2f1dV;
cada2td1 = cada2td1 + cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),4);
cada2td1(:,Gator2Data.Index31) = cada2f3dV;
cada2td1(:,Gator2Data.Index32) = cada1td1dV(:,Gator2Data.Index33);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = cada1f1.*v.f;
cada1f3dVdV = input.auxdata.S.*cada1f2dVdV;
cada1f3dV = input.auxdata.S*cada1f2dV;
cada1f3 = cada1f2*input.auxdata.S;
q.dVdV = cada1f3dVdV./2;
q.dV = cada1f3dV/2;
q.f = cada1f3/2;
%User Line: q = rho.*v.*v.*input.auxdata.S/2;
cada1f1 = m*g;
L.dV = cada1f1*u.dV;
L.f = cada1f1*u.f;
%User Line: L = m*g*u;
cada1f1 = size(t.f,1);
MM.f = zeros(cada1f1,6);
%User Line: MM   = zeros(size(t,1),6);
cada1f1 = size(t.f);
cada1f2 = ones(cada1f1);
MM.f(:,1) = cada1f2;
%User Line: MM(:,1) = ones(size(t));
cadaforvar2.f = [2 3 4 5 6];
%User Line: cadaforvar2 = 2:6;
cada2f1 = size(MM.f,1);
MM.dV = zeros(cada2f1,10);
MM.dVdV = zeros(size(MM.dV,1),19);
for cadaforcount2 = 1:5
    ii.f = cadaforvar2.f(:,cadaforcount2);
    %User Line: ii = cadaforvar2(:,cadaforcount2);
    cada1f1 = ii.f - 1;
    cada2f1 = size(MM.f,1);
    cada1td1 = zeros(cada2f1,2);
    cada1td1dV = zeros(size(cada1td1,1),4);
    cada2f1 = Gator1Data.Index3(:,cadaforcount2);
    cada2tempf1 = nonzeros(cada2f1);
    cada2f2 = zeros(2,1);
    cada2f2(1:length(cada2tempf1)) = cada2tempf1;
    cada2td1 = zeros(size(MM.dV,1),4);
    cada2td1(:,logical(Gator2Data.Index7(:,cadaforcount2))) = MM.dVdV(:,nonzeros(Gator2Data.Index7(:,cadaforcount2)));
    cada2f3dV = cada2td1;
    cada2tempf1 = MM.dV(:,cada2f2(1:Gator2Data.Index8(cadaforcount2)));
    cada2f3 = zeros(size(MM.dV,1),2);
    cada2f3(:,1:Gator2Data.Index8(cadaforcount2)) = cada2tempf1;
    cada2f4 = Gator1Data.Index3(:,cadaforcount2);
    cada2f5 = logical(cada2f4);
    cada1td1dV(:,logical(Gator2Data.Index12(:,cadaforcount2))) = cada2f3dV(:,nonzeros(Gator2Data.Index12(:,cadaforcount2)));
    cada1td1(:,cada2f5) = cada2f3(:,1:Gator2Data.Index13(cadaforcount2));
    cada1f2dVdV = cada1td1dV;     cada1f2dV = cada1td1;
    cada1f2 = MM.f(:,cada1f1);
    cada1tf1dV = M.dV(:,Gator2Data.Index9);
    cada1tf1 = M.f(:,Gator1Data.Index15);
    cada2tf1 = cada1f2dV(:,Gator2Data.Index34);
    cada2td1 = cada2tf1.*cada1tf1dV;
    cada2tf1 = cada1tf1(:,Gator2Data.Index35);
    cada2td1 = cada2td1 + cada2tf1.*cada1f2dVdV;
    cada1td1dV = cada2td1;
    cada1td1 = cada1tf1.*cada1f2dV;
    cada1tf1dV = cada1f2dV(:,Gator2Data.Index10);
    cada1tf1 = cada1f2(:,Gator1Data.Index16);
    cada2tf1 = M.dV(:,Gator2Data.Index36);
    cada2td1 = cada2tf1.*cada1tf1dV;
    cada2tf1 = cada1tf1(:,Gator2Data.Index37);
    cada2td1(:,Gator2Data.Index38) = cada2td1(:,Gator2Data.Index38) + cada2tf1.*M.dVdV;
    cada2f1dV = cada2td1;
    cada2f1 = cada1tf1.*M.dV;
    cada2td1 = cada1td1dV;
    cada2td1 = cada2td1 + cada2f1dV;
    cada1td1dV = cada2td1;
    cada1td1 = cada1td1 + cada2f1;
    cada1f3dVdV = cada1td1dV;     cada1f3dV = cada1td1;
    cada1f3 = cada1f2.*M.f;
    cada2f1 = Gator1Data.Index4(:,cadaforcount2);
    cada2f2 = logical(cada2f1);
    cada2f3 = Gator1Data.Index4(:,cadaforcount2);
    cada2tempf1 = nonzeros(cada2f3);
    cada2f4 = zeros(2,1);
    cada2f4(1:length(cada2tempf1)) = cada2tempf1;
    cada2f5dV = cada1f3dVdV(:,Gator2Data.Index11);
    cada2f5 = cada1f3dV(:,cada2f4);
    MM.dVdV(:,logical(Gator2Data.Index14(:,cadaforcount2))) = cada2f5dV(:,nonzeros(Gator2Data.Index14(:,cadaforcount2)));
    MM.dV(:,cada2f2) = cada2f5;
    MM.f(:,ii.f) = cada1f3;
    %User Line: MM(:,ii) = MM(:,ii-1).*M;
end
cada1f1dVdV = MM.dVdV(:,Gator2Data.Index39);
cada1f1dV = MM.dV(:,Gator1Data.Index18);
cada1f1 = MM.f(:,Gator1Data.Index17);
cada1tf1 =  zeros(10,2);
cada2f1 = input.auxdata.a(Gator1Data.Index19);
cada1tf1(Gator1Data.Index20) = cada2f1;
cada2tf1 = zeros(19,4);
cada2tf1(Gator2Data.Index41) = cada1tf1(Gator2Data.Index40);
numeratorCD0.dVdV = cada1f1dVdV*cada2tf1;
numeratorCD0.dV = cada1f1dV*cada1tf1;
numeratorCD0.f = cada1f1*input.auxdata.a;
%User Line: numeratorCD0   = MM(:,1:6)*input.auxdata.a;
cada1f1dVdV = MM.dVdV(:,Gator2Data.Index42);
cada1f1dV = MM.dV(:,Gator1Data.Index22);
cada1f1 = MM.f(:,Gator1Data.Index21);
cada1tf1 =  zeros(10,2);
cada2f1 = input.auxdata.b(Gator1Data.Index23);
cada1tf1(Gator1Data.Index24) = cada2f1;
cada2tf1 = zeros(19,4);
cada2tf1(Gator2Data.Index44) = cada1tf1(Gator2Data.Index43);
denominatorCD0.dVdV = cada1f1dVdV*cada2tf1;
denominatorCD0.dV = cada1f1dV*cada1tf1;
denominatorCD0.f = cada1f1*input.auxdata.b;
%User Line: denominatorCD0 = MM(:,1:6)*input.auxdata.b;
cada1tf1dV = denominatorCD0.dV(:,Gator2Data.Index45);
cada1tf1 = denominatorCD0.f(:,Gator1Data.Index25);
cada2tf1 = cada1tf1(:,Gator2Data.Index46);
cada2td1 = numeratorCD0.dVdV./cada2tf1;
cada2tf1 = numeratorCD0.dV(:,Gator2Data.Index47);
cada2tf2 = cada1tf1(:,Gator2Data.Index48);
cada2td1 = cada2td1 + -cada2tf1./cada2tf2.^2.*cada1tf1dV;
cada1td1dV = cada2td1;
cada1td1 = numeratorCD0.dV./cada1tf1;
cada1tf1dV = numeratorCD0.dV(:,Gator2Data.Index49);
cada1tf1 = numeratorCD0.f(:,Gator1Data.Index26);
cada1tf2dV = denominatorCD0.dV(:,Gator2Data.Index50);
cada1tf2 = denominatorCD0.f(:,Gator1Data.Index27);
cada2f1dV = -cada1tf1dV;
cada2f1 = uminus(cada1tf1);
cada2tf2 = cada1tf2(:,Gator2Data.Index51);
cada2f2dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f2 = cada1tf2.^2;
cada2tf1 = cada2f2(:,Gator2Data.Index52);
cada2td1 = cada2f1dV./cada2tf1;
cada2tf1 = cada2f1(:,Gator2Data.Index53);
cada2tf2 = cada2f2(:,Gator2Data.Index54);
cada2td1 = cada2td1 + -cada2tf1./cada2tf2.^2.*cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1./cada2f2;
cada2tf1 = denominatorCD0.dV(:,Gator2Data.Index55);
cada2td1 = cada2tf1.*cada2f3dV;
cada2tf1 = cada2f3(:,Gator2Data.Index56);
cada2td1 = cada2td1 + cada2tf1.*denominatorCD0.dVdV;
cada2f4dV = cada2td1;
cada2f4 = cada2f3.*denominatorCD0.dV;
cada2td1 = cada1td1dV;
cada2td1 = cada2td1 + cada2f4dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f4;
CD0.dVdV = cada1td1dV; CD0.dV = cada1td1;
CD0.f = numeratorCD0.f./denominatorCD0.f;
%User Line: CD0            = numeratorCD0./denominatorCD0;
cada1f1dVdV = MM.dVdV(:,Gator2Data.Index57);
cada1f1dV = MM.dV(:,Gator1Data.Index29);
cada1f1 = MM.f(:,Gator1Data.Index28);
cada1tf1 =  zeros(10,2);
cada2f1 = input.auxdata.c(Gator1Data.Index30);
cada1tf1(Gator1Data.Index31) = cada2f1;
cada2tf1 = zeros(19,4);
cada2tf1(Gator2Data.Index59) = cada1tf1(Gator2Data.Index58);
numeratorK.dVdV = cada1f1dVdV*cada2tf1;
numeratorK.dV = cada1f1dV*cada1tf1;
numeratorK.f = cada1f1*input.auxdata.c;
%User Line: numeratorK     = MM(:,1:6)*input.auxdata.c;
cada1f1dVdV = MM.dVdV(:,Gator2Data.Index60);
cada1f1dV = MM.dV(:,Gator1Data.Index33);
cada1f1 = MM.f(:,Gator1Data.Index32);
cada1tf1 =  zeros(10,2);
cada2f1 = input.auxdata.d(Gator1Data.Index34);
cada1tf1(Gator1Data.Index35) = cada2f1;
cada2tf1 = zeros(19,4);
cada2tf1(Gator2Data.Index62) = cada1tf1(Gator2Data.Index61);
denominatorK.dVdV = cada1f1dVdV*cada2tf1;
denominatorK.dV = cada1f1dV*cada1tf1;
denominatorK.f = cada1f1*input.auxdata.d;
%User Line: denominatorK   = MM(:,1:6)*input.auxdata.d;
cada1tf1dV = denominatorK.dV(:,Gator2Data.Index63);
cada1tf1 = denominatorK.f(:,Gator1Data.Index36);
cada2tf1 = cada1tf1(:,Gator2Data.Index64);
cada2td1 = numeratorK.dVdV./cada2tf1;
cada2tf1 = numeratorK.dV(:,Gator2Data.Index65);
cada2tf2 = cada1tf1(:,Gator2Data.Index66);
cada2td1 = cada2td1 + -cada2tf1./cada2tf2.^2.*cada1tf1dV;
cada1td1dV = cada2td1;
cada1td1 = numeratorK.dV./cada1tf1;
cada1tf1dV = numeratorK.dV(:,Gator2Data.Index67);
cada1tf1 = numeratorK.f(:,Gator1Data.Index37);
cada1tf2dV = denominatorK.dV(:,Gator2Data.Index68);
cada1tf2 = denominatorK.f(:,Gator1Data.Index38);
cada2f1dV = -cada1tf1dV;
cada2f1 = uminus(cada1tf1);
cada2tf2 = cada1tf2(:,Gator2Data.Index69);
cada2f2dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f2 = cada1tf2.^2;
cada2tf1 = cada2f2(:,Gator2Data.Index70);
cada2td1 = cada2f1dV./cada2tf1;
cada2tf1 = cada2f1(:,Gator2Data.Index71);
cada2tf2 = cada2f2(:,Gator2Data.Index72);
cada2td1 = cada2td1 + -cada2tf1./cada2tf2.^2.*cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1./cada2f2;
cada2tf1 = denominatorK.dV(:,Gator2Data.Index73);
cada2td1 = cada2tf1.*cada2f3dV;
cada2tf1 = cada2f3(:,Gator2Data.Index74);
cada2td1 = cada2td1 + cada2tf1.*denominatorK.dVdV;
cada2f4dV = cada2td1;
cada2f4 = cada2f3.*denominatorK.dV;
cada2td1 = cada1td1dV;
cada2td1 = cada2td1 + cada2f4dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f4;
K.dVdV = cada1td1dV; K.dV = cada1td1;
K.f = numeratorK.f./denominatorK.f;
%User Line: K              = numeratorK./denominatorK;
cada1f1 = m^2;
cada1f2 = g^2;
cada1f3 = cada1f1*cada1f2;
cada1tf2dV = q.dV(:,Gator2Data.Index75);
cada1tf2 = q.f(:,Gator1Data.Index39);
cada2tf2 = cada1tf2(:,Gator2Data.Index76);
cada2f1dV = 1.*cada2tf2.^(1-1).*cada1tf2dV;
cada2f1 = cada1tf2.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada2tf1 = q.dV(:,Gator2Data.Index77);
cada2td1 = cada2tf1.*cada2f2dV;
cada2tf1 = cada2f2(:,Gator2Data.Index78);
cada2td1 = cada2td1 + cada2tf1.*q.dVdV;
cada1f4dVdV = cada2td1;
cada1f4dV = cada2f2.*q.dV;
cada1f4 = q.f.^2;
cada1tf2dV = cada1f4dV(:,Gator2Data.Index79);
cada1tf2 = cada1f4(:,Gator1Data.Index40);
cada2f1 = uminus(cada1f3);
cada2tf2 = cada1tf2(:,Gator2Data.Index80);
cada2f2dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f2 = cada1tf2.^2;
cada2tf2 = cada2f2(:,Gator2Data.Index81);
cada2f3dV = -cada2f1./cada2tf2.^2.*cada2f2dV;
cada2f3 = cada2f1./cada2f2;
cada2tf1 = cada1f4dV(:,Gator2Data.Index82);
cada2td1 = cada2tf1.*cada2f3dV;
cada2tf1 = cada2f3(:,Gator2Data.Index83);
cada2td1 = cada2td1 + cada2tf1.*cada1f4dVdV;
cada1f5dVdV = cada2td1;
cada1f5dV = cada2f3.*cada1f4dV;
cada1f5 = cada1f3./cada1f4;
cada1tf1dV = cada1f5dV(:,Gator2Data.Index84);
cada1tf1 = cada1f5(:,Gator1Data.Index41);
cada2tf1 = K.dV(:,Gator2Data.Index85);
cada2td1 = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index86);
cada2td1 = cada2td1 + cada2tf1.*K.dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1tf1.*K.dV;
cada1tf1dV = K.dV(:,Gator2Data.Index87);
cada1tf1 = K.f(:,Gator1Data.Index42);
cada2tf1 = cada1f5dV(:,Gator2Data.Index88);
cada2td1 = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index89);
cada2td1 = cada2td1 + cada2tf1.*cada1f5dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f5dV;
cada2td1 = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f6dVdV = cada1td1dV; cada1f6dV = cada1td1;
cada1f6 = K.f.*cada1f5;
cada2f1dV = 1.*u.f.^(1-1).*u.dV;
cada2f1 = u.f.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada1f7dVdV = u.dV.*cada2f2dV;
cada1f7dV = cada2f2.*u.dV;
cada1f7 = u.f.^2;
cada1tf1dV = cada1f7dV(:,Gator2Data.Index90);
cada1tf1 = cada1f7(:,Gator1Data.Index43);
cada2f1 = size(cada1f6dV,1);
cada1td1 = zeros(cada2f1,3);
cada2td1 = zeros(size(cada1tf1dV,1),6);
cada2td1(:,Gator2Data.Index91) = cada1f6dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index92);
cada2td1(:,Gator2Data.Index93) = cada2td1(:,Gator2Data.Index93) + cada2tf1.*cada1f6dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f6dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index44) = cada2f1;
cada2f1 = cada1td1(:,3);
cada2tf1 = cada1f7dV(:,Gator2Data.Index94);
cada2td1 = zeros(size(cada1f6dV,1),3);
cada2td1(:,Gator2Data.Index95) = cada2tf1.*cada1f6dV;
cada2td1(:,3) = cada2td1(:,3) + cada1f6.*cada1f7dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1f6.*cada1f7dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),9);
cada2td1(:,Gator2Data.Index96) = cada2f3dV;
cada2td1(:,Gator2Data.Index97) = cada1td1dV(:,Gator2Data.Index98);
cada1td1dV = cada2td1;
cada1td1(:,3) = cada2f3;
cada1f8dVdV = cada1td1dV; cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada2f1 = size(CD0.dV,1);
cada1td1 = zeros(cada2f1,3);
cada1td1dV = CD0.dVdV;
cada1td1(:,Gator1Data.Index45) = CD0.dV;
cada2td1 = zeros(size(cada1td1dV,1),9);
cada2td1(:,Gator2Data.Index99) = cada1td1dV;
cada2td1 = cada2td1 + cada1f8dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada1f8dV;
cada1f9dVdV = cada1td1dV; cada1f9dV = cada1td1;
cada1f9 = CD0.f + cada1f8;
cada1tf1dV = cada1f9dV(:,Gator2Data.Index100);
cada1tf1 = cada1f9(:,Gator1Data.Index46);
cada2f1 = size(q.dV,1);
cada1td1 = zeros(cada2f1,3);
cada2tf1 = q.dV(:,Gator2Data.Index101);
cada2td1 = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index102);
cada2td1(:,Gator2Data.Index103) = cada2td1(:,Gator2Data.Index103) + cada2tf1.*q.dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*q.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index47) = cada2f1;
cada1tf1dV = q.dV(:,Gator2Data.Index104);
cada1tf1 = q.f(:,Gator1Data.Index48);
cada2tf1 = cada1f9dV(:,Gator2Data.Index105);
cada2td1 = zeros(size(cada1tf1dV,1),9);
cada2td1(:,Gator2Data.Index106) = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index107);
cada2td1 = cada2td1 + cada2tf1.*cada1f9dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f9dV;
cada2td1 = zeros(size(cada1td1dV,1),9);
cada2td1(:,Gator2Data.Index108) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
D.dVdV = cada1td1dV; D.dV = cada1td1;
D.f = q.f.*cada1f9;
%User Line: D = q.*(CD0+K.*((m.^2).*(g.^2)./(q.^2)).*(u.^2));
cada1f1 = m^2;
cada1f2 = g^2;
cada1f3 = cada1f1*cada1f2;
cada1tf2dV = q.dV(:,Gator2Data.Index109);
cada1tf2 = q.f(:,Gator1Data.Index49);
cada2tf2 = cada1tf2(:,Gator2Data.Index110);
cada2f1dV = 1.*cada2tf2.^(1-1).*cada1tf2dV;
cada2f1 = cada1tf2.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada2tf1 = q.dV(:,Gator2Data.Index111);
cada2td1 = cada2tf1.*cada2f2dV;
cada2tf1 = cada2f2(:,Gator2Data.Index112);
cada2td1 = cada2td1 + cada2tf1.*q.dVdV;
cada1f4dVdV = cada2td1;
cada1f4dV = cada2f2.*q.dV;
cada1f4 = q.f.^2;
cada1tf2dV = cada1f4dV(:,Gator2Data.Index113);
cada1tf2 = cada1f4(:,Gator1Data.Index50);
cada2f1 = uminus(cada1f3);
cada2tf2 = cada1tf2(:,Gator2Data.Index114);
cada2f2dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f2 = cada1tf2.^2;
cada2tf2 = cada2f2(:,Gator2Data.Index115);
cada2f3dV = -cada2f1./cada2tf2.^2.*cada2f2dV;
cada2f3 = cada2f1./cada2f2;
cada2tf1 = cada1f4dV(:,Gator2Data.Index116);
cada2td1 = cada2tf1.*cada2f3dV;
cada2tf1 = cada2f3(:,Gator2Data.Index117);
cada2td1 = cada2td1 + cada2tf1.*cada1f4dVdV;
cada1f5dVdV = cada2td1;
cada1f5dV = cada2f3.*cada1f4dV;
cada1f5 = cada1f3./cada1f4;
cada1tf1dV = cada1f5dV(:,Gator2Data.Index118);
cada1tf1 = cada1f5(:,Gator1Data.Index51);
cada2tf1 = K.dV(:,Gator2Data.Index119);
cada2td1 = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index120);
cada2td1 = cada2td1 + cada2tf1.*K.dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1tf1.*K.dV;
cada1tf1dV = K.dV(:,Gator2Data.Index121);
cada1tf1 = K.f(:,Gator1Data.Index52);
cada2tf1 = cada1f5dV(:,Gator2Data.Index122);
cada2td1 = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index123);
cada2td1 = cada2td1 + cada2tf1.*cada1f5dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f5dV;
cada2td1 = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f6dVdV = cada1td1dV; cada1f6dV = cada1td1;
cada1f6 = K.f.*cada1f5;
cada1f7 = umax^2;
cada1f8dVdV = cada1f7.*cada1f6dVdV;
cada1f8dV = cada1f7*cada1f6dV;
cada1f8 = cada1f6*cada1f7;
cada1td1dV = CD0.dVdV; cada1td1 = CD0.dV;
cada2td1 = cada1td1dV;
cada2td1 = cada2td1 + cada1f8dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada1f8dV;
cada1f9dVdV = cada1td1dV; cada1f9dV = cada1td1;
cada1f9 = CD0.f + cada1f8;
cada1tf1dV = cada1f9dV(:,Gator2Data.Index124);
cada1tf1 = cada1f9(:,Gator1Data.Index53);
cada2tf1 = q.dV(:,Gator2Data.Index125);
cada2td1 = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index126);
cada2td1 = cada2td1 + cada2tf1.*q.dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1tf1.*q.dV;
cada1tf1dV = q.dV(:,Gator2Data.Index127);
cada1tf1 = q.f(:,Gator1Data.Index54);
cada2tf1 = cada1f9dV(:,Gator2Data.Index128);
cada2td1 = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index129);
cada2td1 = cada2td1 + cada2tf1.*cada1f9dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f9dV;
cada2td1 = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
Dmax.dVdV = cada1td1dV; Dmax.dV = cada1td1;
Dmax.f = q.f.*cada1f9;
%User Line: Dmax = q.*(CD0+K.*((m.^2).*(g.^2)./(q.^2)).*(umax.^2));
cada1f1dVdV = MM.dVdV(:,Gator2Data.Index130);
cada1f1dV = MM.dV(:,Gator1Data.Index56);
cada1f1 = MM.f(:,Gator1Data.Index55);
cada1tf1 =  zeros(10,12);
cada2f1 = input.auxdata.f(Gator1Data.Index57);
cada1tf1(Gator1Data.Index58) = cada2f1;
cada2tf1 = sparse(Gator2Data.Index132,Gator2Data.Index133,cada1tf1(Gator2Data.Index131),19,24);
E.dVdV = full(cada1f1dVdV*cada2tf1);
E.dV = cada1f1dV*cada1tf1;
E.f = cada1f1*input.auxdata.f;
%User Line: E = MM(:,1:6)*input.auxdata.f;
%User Line: % T  = sum(HH(:,1:6).*E,2).*g/2.2;  (original comment)
cada1f1dVdV = HH.dVdV(:,Gator2Data.Index134);
cada1f1dV = HH.dV(:,Gator1Data.Index60);
cada1f1 = HH.f(:,Gator1Data.Index59);
cada1tf1dV = E.dV(:,Gator2Data.Index135);
cada1tf1 = E.f(:,Gator1Data.Index61);
cada2f1 = size(cada1f1dV,1);
cada1td1 = zeros(cada2f1,12);
cada2tf1 = cada1f1dV(:,Gator2Data.Index136);
cada2td1 = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index137);
cada2td1(:,Gator2Data.Index138) = cada2td1(:,Gator2Data.Index138) + cada2tf1.*cada1f1dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f1dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index62) = cada2f1;
cada1tf1dV = cada1f1dV(:,Gator2Data.Index139);
cada1tf1 = cada1f1(:,Gator1Data.Index63);
cada2tf1 = E.dV(:,Gator2Data.Index140);
cada2td1 = zeros(size(cada1tf1dV,1),24);
cada2td1(:,Gator2Data.Index141) = cada2tf1.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index142);
cada2td1 = cada2td1 + cada2tf1.*E.dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*E.dV;
cada2td1 = zeros(size(cada1td1dV,1),24);
cada2td1(:,Gator2Data.Index143) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = cada1f1.*E.f;
cada1tf2 =  ones(6,1);
cada1tf1 =  zeros(12,2);
cada2f1 = cada1tf2(Gator1Data.Index64);
cada1tf1(Gator1Data.Index65) = cada2f1;
cada2tf1 = zeros(24,4);
cada2tf1(Gator2Data.Index145) = cada1tf1(Gator2Data.Index144);
T.dVdV = cada1f2dVdV*cada2tf1;
T.dV = cada1f2dV*cada1tf1;
T.f = sum(cada1f2,2);
%User Line: T  = sum(HH(:,1:6).*E,2);
cada2f1dV = -sin(fpa.f).*fpa.dV;
cada2f1 = cos(fpa.f);
cada1f1dVdV = fpa.dV.*cada2f1dV;
cada1f1dV = cada2f1.*fpa.dV;
cada1f1 = sin(fpa.f);
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*cada1f1dV;
cada2f1 = cada1f1.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,1) = cada1f1dV.*v.dV;
cada2td1(:,2) = cada2td1(:,2) + v.f.*cada1f1dVdV;
cada2f2dV = cada2td1;
cada2f2 = v.f.*cada1f1dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index146) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
hdot.dVdV = cada1td1dV; hdot.dV = cada1td1;
hdot.f = v.f.*cada1f1;
%User Line: hdot = v.*sin(fpa);
%User Line: %vdot = (throttle.*T-D)./m-g.*sin(fpa);
cada2f1 = size(T.dV,1);
cada1td1 = zeros(cada2f1,3);
cada1td1dV = T.dVdV;
cada1td1(:,Gator1Data.Index66) = T.dV;
cada2f1dV = -D.dVdV;
cada2f1 = uminus(D.dV);
cada2td1 = zeros(size(cada1td1dV,1),9);
cada2td1(:,Gator2Data.Index147) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = T.f - D.f;
cada1td1dV = cada1f1dVdV; cada1td1 = cada1f1dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index148);
cada2f1 = cada1td1(:,Gator1Data.Index67);
cada2td1 = cada2f1dV;
cada2td1(:,Gator2Data.Index149) = cada2td1(:,Gator2Data.Index149) + Dmax.dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada2f1 + Dmax.dV;
cada2td1 = zeros(size(cada1td1,1),9);
cada2td1(:,Gator2Data.Index150) = cada2f2dV;
cada2td1(:,Gator2Data.Index151) = cada1td1dV(:,Gator2Data.Index152);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index67) = cada2f2;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = cada1f1 + Dmax.f;
cada2f1 = size(throttle.dV,1);
cada1td1 = zeros(cada2f1,4);
cada2tf1 = throttle.dV(:,Gator2Data.Index153);
cada2f1dV = cada2tf1.*cada1f2dV;
cada2f1 = cada1f2.*throttle.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,4) = cada2f1;
cada1tf1dV = throttle.dV(:,Gator2Data.Index154);
cada1tf1 = throttle.f(:,Gator1Data.Index68);
cada2f1 = cada1td1(:,Gator1Data.Index69);
cada2td1 = zeros(size(cada1tf1dV,1),12);
cada2td1(:,Gator2Data.Index155) = cada1f2dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index156);
cada2td1(:,Gator2Data.Index157) = cada2td1(:,Gator2Data.Index157) + cada2tf1.*cada1f2dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1tf1.*cada1f2dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),15);
cada2td1(:,Gator2Data.Index158) = cada2f3dV;
cada2td1(:,Gator2Data.Index159) = cada1td1dV(:,Gator2Data.Index160);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index69) = cada2f3;
cada1f3dVdV = cada1td1dV; cada1f3dV = cada1td1;
cada1f3 = throttle.f.*cada1f2;
cada1td1dV = cada1f3dVdV; cada1td1 = cada1f3dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index161);
cada2f1 = cada1td1(:,Gator1Data.Index70);
cada2f2dV = -Dmax.dVdV;
cada2f2 = uminus(Dmax.dV);
cada2td1 = cada2f1dV;
cada2td1(:,Gator2Data.Index162) = cada2td1(:,Gator2Data.Index162) + cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),15);
cada2td1(:,Gator2Data.Index163) = cada2f3dV;
cada2td1(:,Gator2Data.Index164) = cada1td1dV(:,Gator2Data.Index165);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index70) = cada2f3;
cada1f4dVdV = cada1td1dV; cada1f4dV = cada1td1;
cada1f4 = cada1f3 - Dmax.f;
cada1f5dVdV = cada1f4dVdV./m;
cada1f5dV = cada1f4dV/m;
cada1f5 = cada1f4/m;
cada2f1dV = -sin(fpa.f).*fpa.dV;
cada2f1 = cos(fpa.f);
cada1f6dVdV = fpa.dV.*cada2f1dV;
cada1f6dV = cada2f1.*fpa.dV;
cada1f6 = sin(fpa.f);
cada1f7dVdV = g.*cada1f6dVdV;
cada1f7dV = g*cada1f6dV;
cada1f7 = g*cada1f6;
cada2f1 = size(cada1f5dV,1);
cada1td1 = zeros(cada2f1,5);
cada1td1dV = cada1f5dVdV;
cada1td1(:,Gator1Data.Index71) = cada1f5dV;
cada2f1 = cada1td1(:,3);
cada2f2dV = -cada1f7dVdV;
cada2f2 = uminus(cada1f7dV);
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),16);
cada2td1(:,9) = cada2f3dV;
cada2td1(:,Gator2Data.Index166) = cada1td1dV(:,Gator2Data.Index167);
cada1td1dV = cada2td1;
cada1td1(:,3) = cada2f3;
vdot.dVdV = cada1td1dV; vdot.dV = cada1td1;
vdot.f = cada1f5 - cada1f7;
%User Line: vdot = (throttle.*(T-D+Dmax)-Dmax)./m-g.*sin(fpa);
cada2f1dV = cos(fpa.f).*fpa.dV;
cada2f1 = sin(fpa.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f1dVdV = fpa.dV.*cada2f2dV;
cada1f1dV = cada2f2.*fpa.dV;
cada1f1 = cos(fpa.f);
cada2f1 = size(u.dV,1);
cada1td1 = zeros(cada2f1,2);
cada1td1(:,2) = u.dV;
cada2f1 = cada1td1(:,1);
cada2f2dV = -cada1f1dVdV;
cada2f2 = uminus(cada1f1dV);
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada1td1dV = cada2f3dV;
cada1td1(:,1) = cada2f3;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = u.f - cada1f1;
cada1f3dVdV = g.*cada1f2dVdV;
cada1f3dV = g*cada1f2dV;
cada1f3 = g*cada1f2;
cada1tf1dV = v.dV(:,Gator2Data.Index168);
cada1tf1 = v.f(:,Gator1Data.Index72);
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,3);
cada2tf1 = cada1tf1(:,1);
cada2td1 = zeros(size(cada1f3dVdV,1),3);
cada2td1(:,3) = cada1f3dVdV./cada2tf1;
cada2td1(:,Gator2Data.Index169) = cada2td1(:,Gator2Data.Index169) + -cada1f3dV./cada1tf1.^2.*cada1tf1dV;
cada2f1dV = cada2td1;
cada2f1 = cada1f3dV./cada1tf1;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index73) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2f2dV = -cada1f3dV;
cada2f2 = uminus(cada1f3);
cada2f3dV = 2.*v.f.^(2-1).*v.dV;
cada2f3 = v.f.^2;
cada2tf1 = cada2f3(:,Gator2Data.Index170);
cada2td1 = zeros(size(cada2f2dV,1),3);
cada2td1(:,Gator2Data.Index171) = cada2f2dV./cada2tf1;
cada2td1(:,1) = cada2td1(:,1) + -cada2f2./cada2f3.^2.*cada2f3dV;
cada2f4dV = cada2td1;
cada2f4 = cada2f2./cada2f3;
cada2tf1 = v.dV(:,Gator2Data.Index172);
cada2f5dV = cada2tf1.*cada2f4dV;
cada2f5 = cada2f4.*v.dV;
cada2f6dV = cada2f5dV;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(size(cada1td1,1),6);
cada2td1(:,Gator2Data.Index173) = cada2f6dV;
cada2td1(:,Gator2Data.Index174) = cada1td1dV(:,Gator2Data.Index175);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f6;
fpadot.dVdV = cada1td1dV; fpadot.dV = cada1td1;
fpadot.f = cada1f3./v.f;
%User Line: fpadot = g.*(u-cos(fpa))./v;
cada2f1dV = cos(fpa.f).*fpa.dV;
cada2f1 = sin(fpa.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f1dVdV = fpa.dV.*cada2f2dV;
cada1f1dV = cada2f2.*fpa.dV;
cada1f1 = cos(fpa.f);
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*cada1f1dV;
cada2f1 = cada1f1.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,1) = cada1f1dV.*v.dV;
cada2td1(:,2) = cada2td1(:,2) + v.f.*cada1f1dVdV;
cada2f2dV = cada2td1;
cada2f2 = v.f.*cada1f1dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index176) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
xdot.dVdV = cada1td1dV; xdot.dV = cada1td1;
xdot.f = v.f.*cada1f1;
%User Line: xdot = v.*cos(fpa);
%User Line: % input.auxdata.realthrottle = (vdot.*(m-g.*sin(fpa))+D)./T;
%User Line: %phaseout(1).dynamics = [hdot, vdot, fpadot];
cada2f1 = size(hdot.f,1);
cada1td1 = zeros(cada2f1,12);
cada1td1dV = hdot.dVdV;
cada1td1(:,Gator1Data.Index74) = hdot.dV;
cada2td1 = zeros(size(cada1td1,1),19);
cada2td1(:,Gator2Data.Index177) = vdot.dVdV;
cada2td1(:,Gator2Data.Index178) = cada1td1dV(:,Gator2Data.Index179);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index75) = vdot.dV;
cada2td1 = zeros(size(cada1td1,1),25);
cada2td1(:,Gator2Data.Index180) = fpadot.dVdV;
cada2td1(:,Gator2Data.Index181) = cada1td1dV(:,Gator2Data.Index182);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index76) = fpadot.dV;
cada2td1 = zeros(size(cada1td1,1),28);
cada2td1(:,Gator2Data.Index183) = xdot.dVdV;
cada2td1(:,Gator2Data.Index184) = cada1td1dV(:,Gator2Data.Index185);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index77) = xdot.dV;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = [hdot.f vdot.f fpadot.f xdot.f];
phaseout(1).dynamics.dVdV = cada1f1dVdV;
phaseout(1).dynamics.dV = cada1f1dV;
phaseout(1).dynamics.f = cada1f1;
%User Line: phaseout(1).dynamics = [hdot, vdot, fpadot, xdot];
phaseout(1).path.dVdV = q.dVdV;
phaseout(1).path.dV = q.dV;
phaseout(1).path.f = q.f;
%User Line: phaseout(1).path = q;
cada2f1 = size(throttle.dV,1);
cada1td1 = zeros(cada2f1,3);
cada2tf1 = throttle.dV(:,Gator2Data.Index186);
cada2f1dV = cada2tf1.*T.dV;
cada2f1 = T.f.*throttle.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,3) = cada2f1;
cada1tf1dV = throttle.dV(:,Gator2Data.Index187);
cada1tf1 = throttle.f(:,Gator1Data.Index78);
cada2f1 = cada1td1(:,Gator1Data.Index79);
cada2td1 = zeros(size(cada1tf1dV,1),6);
cada2td1(:,Gator2Data.Index188) = T.dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index189);
cada2td1(:,Gator2Data.Index190) = cada2td1(:,Gator2Data.Index190) + cada2tf1.*T.dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1tf1.*T.dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),8);
cada2td1(:,Gator2Data.Index191) = cada2f3dV;
cada2td1(:,Gator2Data.Index192) = cada1td1dV(:,Gator2Data.Index193);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index79) = cada2f3;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = throttle.f.*T.f;
cada1f2dV = uminus(throttle.dV);
cada1f2 = 1 - throttle.f;
cada1td1dV = D.dVdV; cada1td1 = D.dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index194);
cada2f1 = cada1td1(:,Gator1Data.Index80);
cada2f2dV = -Dmax.dVdV;
cada2f2 = uminus(Dmax.dV);
cada2td1 = cada2f1dV;
cada2td1(:,Gator2Data.Index195) = cada2td1(:,Gator2Data.Index195) + cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),9);
cada2td1(:,Gator2Data.Index196) = cada2f3dV;
cada2td1(:,Gator2Data.Index197) = cada1td1dV(:,Gator2Data.Index198);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index80) = cada2f3;
cada1f3dVdV = cada1td1dV; cada1f3dV = cada1td1;
cada1f3 = D.f - Dmax.f;
cada2f1 = size(cada1f2dV,1);
cada1td1 = zeros(cada2f1,4);
cada2tf1 = cada1f2dV(:,Gator2Data.Index199);
cada2f1dV = cada2tf1.*cada1f3dV;
cada2f1 = cada1f3.*cada1f2dV;
cada1td1dV = cada2f1dV;
cada1td1(:,4) = cada2f1;
cada1tf1dV = cada1f2dV(:,Gator2Data.Index200);
cada1tf1 = cada1f2(:,Gator1Data.Index81);
cada2f1 = cada1td1(:,Gator1Data.Index82);
cada2td1 = zeros(size(cada1tf1dV,1),12);
cada2td1(:,Gator2Data.Index201) = cada1f3dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index202);
cada2td1(:,Gator2Data.Index203) = cada2td1(:,Gator2Data.Index203) + cada2tf1.*cada1f3dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1tf1.*cada1f3dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),15);
cada2td1(:,Gator2Data.Index204) = cada2f3dV;
cada2td1(:,Gator2Data.Index205) = cada1td1dV(:,Gator2Data.Index206);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index82) = cada2f3;
cada1f4dVdV = cada1td1dV; cada1f4dV = cada1td1;
cada1f4 = cada1f2.*cada1f3;
cada2f1 = size(cada1f1dV,1);
cada1td1 = zeros(cada2f1,4);
cada1td1dV = cada1f1dVdV;
cada1td1(:,Gator1Data.Index83) = cada1f1dV;
cada2td1 = zeros(size(cada1td1dV,1),15);
cada2td1(:,Gator2Data.Index207) = cada1td1dV;
cada2td1 = cada2td1 + cada1f4dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada1f4dV;
cada1f5dVdV = cada1td1dV; cada1f5dV = cada1td1;
cada1f5 = cada1f1 + cada1f4;
cada1tf1dV = T.dV(:,Gator2Data.Index208);
cada1tf1 = T.f(:,Gator1Data.Index84);
cada2tf1 = cada1tf1(:,Gator2Data.Index209);
cada2td1 = cada1f5dVdV./cada2tf1;
cada2tf1 = cada1f5dV(:,Gator2Data.Index210);
cada2tf2 = cada1tf1(:,Gator2Data.Index211);
cada2td1(:,Gator2Data.Index212) = cada2td1(:,Gator2Data.Index212) + -cada2tf1./cada2tf2.^2.*cada1tf1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1f5dV./cada1tf1;
cada1tf1dV = cada1f5dV(:,Gator2Data.Index213);
cada1tf1 = cada1f5(:,Gator1Data.Index85);
cada1tf2dV = T.dV(:,Gator2Data.Index214);
cada1tf2 = T.f(:,Gator1Data.Index86);
cada2f1dV = cada1td1dV(:,Gator2Data.Index215);
cada2f1 = cada1td1(:,Gator1Data.Index87);
cada2f2dV = -cada1tf1dV;
cada2f2 = uminus(cada1tf1);
cada2tf2 = cada1tf2(:,Gator2Data.Index216);
cada2f3dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f3 = cada1tf2.^2;
cada2tf1 = cada2f3(:,Gator2Data.Index217);
cada2td1 = cada2f2dV./cada2tf1;
cada2tf1 = cada2f2(:,Gator2Data.Index218);
cada2tf2 = cada2f3(:,Gator2Data.Index219);
cada2td1(:,Gator2Data.Index220) = cada2td1(:,Gator2Data.Index220) + -cada2tf1./cada2tf2.^2.*cada2f3dV;
cada2f4dV = cada2td1;
cada2f4 = cada2f2./cada2f3;
cada2tf1 = T.dV(:,Gator2Data.Index221);
cada2td1 = cada2tf1.*cada2f4dV;
cada2tf1 = cada2f4(:,Gator2Data.Index222);
cada2td1(:,Gator2Data.Index223) = cada2td1(:,Gator2Data.Index223) + cada2tf1.*T.dVdV;
cada2f5dV = cada2td1;
cada2f5 = cada2f4.*T.dV;
cada2td1 = cada2f1dV;
cada2td1 = cada2td1 + cada2f5dV;
cada2f6dV = cada2td1;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(size(cada1td1,1),15);
cada2td1(:,Gator2Data.Index224) = cada2f6dV;
cada2td1(:,Gator2Data.Index225) = cada1td1dV(:,Gator2Data.Index226);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index87) = cada2f6;
cada1f6dVdV = cada1td1dV; cada1f6dV = cada1td1;
cada1f6 = cada1f5./T.f;
phaseout(1).realthrottle.dVdV = cada1f6dVdV;
phaseout(1).realthrottle.dV = cada1f6dV;
phaseout(1).realthrottle.f = cada1f6;
%User Line: phaseout(1).realthrottle = (throttle.*T + (1-throttle).*(D-Dmax))./T;
%User Line: %---------------------------------%
%User Line: % END: function maxDistanceDae.m %
%User Line: %---------------------------------%
cada2f1 = [4 7];
phaseout.dynamics.dV_size = cada2f1;
phaseout.dynamics.dV_location = Gator1Data.Index88;
cada2f1 = 7;
phaseout.path.dV_size = cada2f1;
phaseout.path.dV_location = Gator1Data.Index89;
cada2f1 = 7;
phaseout.realthrottle.dV_size = cada2f1;
phaseout.realthrottle.dV_location = Gator1Data.Index90;
phaseout.dynamics.dVdV_size = [phaseout.dynamics.dV_size,7];
phaseout.dynamics.dVdV_location = [phaseout.dynamics.dV_location(Gator2Data.Index227,:), Gator2Data.Index228];
phaseout.path.dVdV_size = [phaseout.path.dV_size,7];
phaseout.path.dVdV_location = [phaseout.path.dV_location(Gator2Data.Index229,:), Gator2Data.Index230];
phaseout.realthrottle.dVdV_size = [phaseout.realthrottle.dV_size,7];
phaseout.realthrottle.dVdV_location = [phaseout.realthrottle.dV_location(Gator2Data.Index231,:), Gator2Data.Index232];
end


function ADiGator_LoadData()
global ADiGator_MaxDistanceToDescendContinuousADiGatorHes
ADiGator_MaxDistanceToDescendContinuousADiGatorHes = load('MaxDistanceToDescendContinuousADiGatorHes.mat');
return
end